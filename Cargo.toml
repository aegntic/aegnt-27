[package]
name = "aegnt-27"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
description = "aegnt-27: The Human Peak Protocol - Autonomous Elite Generation Neural Technology System 2.7"
homepage = "https://github.com/aegntic/aegnt-27"
repository = "https://github.com/aegntic/aegnt-27"
documentation = "https://docs.rs/aegnt-27"
keywords = ["ai-detection", "humanization", "authenticity", "automation", "privacy"]
categories = ["multimedia", "authentication", "simulation"]
readme = "README.md"

[dependencies]
# Workspace dependencies
tokio.workspace = true
serde.workspace = true
serde_json.workspace = true
uuid.workspace = true
chrono.workspace = true
anyhow.workspace = true
thiserror.workspace = true
log.workspace = true
env_logger.workspace = true
futures.workspace = true
async-trait.workspace = true
parking_lot.workspace = true

# CLI dependencies
clap = { version = "4.0", features = ["derive"] }

# Cryptography and security
rand = "0.8"
sha2 = "0.10"
aes-gcm = "0.10"
ed25519-dalek = "2.0"

# Audio processing (optional for basic compilation)
cpal = { version = "0.15", optional = true }
hound = { version = "3.5", optional = true }
rubato = { version = "0.14", optional = true }
rustfft = { version = "6.1", optional = true }

# Mathematical utilities
num_cpus = "1.0"
rand_distr = "0.4"

# HMAC and cryptography
hmac = "0.12"
pbkdf2 = "0.12"

# Image and video processing
image = "0.24"
opencv = { version = "0.88", optional = true }
ffmpeg-next = { version = "6.0", optional = true }

# Machine learning and AI
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }
tch = { version = "0.14", optional = true }

# System integration
[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["winuser", "wingdi"] }

[target.'cfg(target_os = "linux")'.dependencies]
x11 = "2.21"

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.24"
core-graphics = "0.22"

# Input simulation (optional for basic compilation)
enigo = { version = "0.1", optional = true }
inputbot = { version = "0.5", optional = true }

# Network and HTTP
reqwest = { version = "0.11", features = ["json"], optional = true }
hyper = { version = "0.14", optional = true }

# Configuration and serialization
toml = "0.8"
config = "0.13"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.0"
tempfile = "3.0"
wiremock = "0.5"

[features]
default = ["basic-humanization", "detection-validation"]
full = ["all-humanization", "detection-validation", "network-features"]
full-with-ml = ["all-humanization", "ml-models", "video-processing", "network-features"]

# Core feature sets
basic-humanization = ["mouse-humanization", "typing-humanization"]
basic-humanization-with-audio = ["basic-humanization", "cpal", "hound", "enigo"]
all-humanization = ["mouse-humanization", "typing-humanization", "audio-humanization", "visual-humanization"]
detection-validation = ["ai-detection", "pattern-analysis"]
ml-models = ["candle-core", "candle-nn", "tch"]
video-processing = ["opencv", "ffmpeg-next"]
network-features = ["reqwest", "hyper"]

# Individual modules
mouse-humanization = []
typing-humanization = []
audio-humanization = []
visual-humanization = []
ai-detection = []
pattern-analysis = []


[[example]]
name = "basic_integration"
required-features = ["basic-humanization"]

[[example]]
name = "advanced_customization"
required-features = ["all-humanization"]

[[example]]
name = "detection_validation"
required-features = ["detection-validation"]

[lib]
name = "aegnt_27"
path = "src/lib.rs"

# Binary targets for distribution
[[bin]]
name = "aegnt-27-lite"
path = "src/bin/aegnt-27-lite.rs"
required-features = ["basic-humanization"]

[[bin]]
name = "aegnt-27-pro"
path = "src/bin/aegnt-27-pro.rs"
required-features = ["all-humanization", "detection-validation"]

[[bin]]
name = "aegnt-27-enterprise"
path = "src/bin/aegnt-27-enterprise.rs"
required-features = ["full"]